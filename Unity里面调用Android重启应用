package com.jianwu.tafang;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import android.app.Activity;
import android.app.AlarmManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.util.Log;

public class Restart {
    
    private static final String TAG = "restart";
    private static Restart _instance;
    private Class<?> _unityPlayerClass;
    private Field _unityPlayerActivityField;
    private Method _unitySendMessageMethod;
    public Activity _activity;
    private String gameObject;
    public static Restart getInstanceInActivity() {
        return _instance;
    }
    
    public static Restart getInstance(String gameObject) {
        if (_instance == null) {
            _instance = new Restart( gameObject);
        }
        return _instance;
    }
    
    private Restart(String gameObject) 
    {
        this.gameObject = gameObject;
        
        try {
            this._unityPlayerClass =  Class.forName("com.unity3d.player.UnityPlayer");
            
            this._unityPlayerActivityField = this._unityPlayerClass
                    .getField("currentActivity");
            this._unitySendMessageMethod = this._unityPlayerClass.getMethod(
                    "UnitySendMessage", new Class[] { String.class,
                            String.class, String.class });
            
        } catch (ClassNotFoundException e) {
            Log.i(TAG, "could not find UnityPlayer class: " + e.getMessage());
        } catch (NoSuchFieldException e) {
            Log.i(TAG,
                    "could not find currentActivity field: " + e.getMessage());
        } catch (NoSuchMethodException e) {
            Log.i(TAG, "could not find UnityPlayer class: " + e.getMessage());
        } catch (Exception e) {
            Log.i(TAG,
                    "unkown exception occurred locating getActivity(): "
                            + e.getMessage());
        }
        getActivity();
    }
    
    public Activity getActivity() {
        if(this._activity == null) {
            try {
                this._activity = (Activity) this._unityPlayerActivityField.get(this._unityPlayerClass);
            } catch (IllegalArgumentException e) {
                Log.i(TAG, "error getting currentActivity: " + e.getMessage());
            } catch (IllegalAccessException e) {
                Log.i(TAG, "error getting currentActivity: " + e.getMessage());
            }
        }
        
        return this._activity;
    }
    
    public void UnitySendMessage(String m, String p) {
//         UnityPlayer.UnitySendMessage(gameObject, m, p);

        if (this._unitySendMessageMethod != null) {
            try {
                
                this._unitySendMessageMethod.invoke(null, new Object[] {
                        gameObject, m, p });
            } catch (IllegalArgumentException e) {
                Log.i(TAG,
                        "could not find UnitySendMessage method: "
                                + e.getMessage());
            } catch (IllegalAccessException e) {
                Log.i(TAG,
                        "could not find UnitySendMessage method: "
                                + e.getMessage());
            } catch (InvocationTargetException e) {
                Log.i(TAG,
                        "could not find UnitySendMessage method: "
                                + e.getMessage());
            }
        } else {
            Log.i(TAG, "UnitySendMessage: " + gameObject + ", " + m + ", " + p);
        }
    }
    
    public  void restart() {
        Intent restartIntent = getActivity().getPackageManager()
                .getLaunchIntentForPackage(getActivity().getPackageName() );
        PendingIntent intent = PendingIntent.getActivity(
                getActivity(), 0,
                restartIntent, Intent.FLAG_ACTIVITY_CLEAR_TOP);
        AlarmManager manager = (AlarmManager) getActivity().getSystemService(Context.ALARM_SERVICE);
        manager.set(AlarmManager.RTC, System.currentTimeMillis()+100, intent);
        getActivity().finish();
        android.os.Process.killProcess(android.os.Process.myPid());
    }
    
    public  void restart(int delay) {
        if(delay <= 0 )
            delay = 10000;
        Intent restartIntent = getActivity().getPackageManager()
                .getLaunchIntentForPackage(getActivity().getPackageName() );
        PendingIntent intent = PendingIntent.getActivity(
                getActivity(), 0,
                restartIntent, Intent.FLAG_ACTIVITY_CLEAR_TOP);
        AlarmManager manager = (AlarmManager) getActivity().getSystemService(Context.ALARM_SERVICE);
        manager.set(AlarmManager.RTC, System.currentTimeMillis()+delay, intent);
        getActivity().finish();
        android.os.Process.killProcess(android.os.Process.myPid());
    }
    
}
